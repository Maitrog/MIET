<character>: ‘a’ | ‘b’ | ‘c’ | ‘d’ | ‘e’ | ‘f’ | ‘g’ | ‘h’ | ‘i’ | ‘j’ | ‘k’ | ‘l’ | ‘m’ | ‘n’ | ‘o’ | ‘p’ | ‘q’ | ‘r’ | ‘s’ | ‘t’ | ‘u’ | ‘v’ | ‘w’ | ‘x’ | ‘y’ | ‘z’ | ‘A’ | ‘B’ | ‘C’ | ‘D’ | ‘E’ | ‘F’ | ‘G’ | ‘H’ | ‘I’ | ‘J’ | ‘K’ | ‘L’ | ‘M’ | ‘N’ | ‘O’ | ‘P’ | ‘Q’ | ‘R’ | ‘S’ | ‘T’ | ‘U’ | ‘V’ | ‘W’ | ‘X’ | ‘Y’ | ‘Z’ | ‘_’
<id_end>:  | <character><id_end>
<identifier>: <character><id_end>
<digit>: ‘0’ | ‘1’ | ‘2’ | ‘3’ | ‘4’ |  ‘5’ | ‘6’ | ‘7’ | ‘8’ | ‘9’
<number_end>:  | <digit><number_end>
<number>: <digit><number_end>
<expression>: <term> ‘+’ <expression> | <term>  ‘-’ <expression> | <term>
<term>: <factor> ‘*’ < term > | <factor> ‘/’ <term> | <factor>
<factor>: <identifier> | <number> | ‘(’<expression>‘)’
<relop>:  ‘<’ | ‘>’ | ‘==’ | ‘!=’
<bool_expression>: <expression> <relop> <expression>
<assign>: <identifier> ‘=’ <expression> ‘;’
<string>: ‘"’<string_end>‘"’
<string_end>:  | <identifier><string_end> | <number><string_end> | ‘ ’<string_end>
<print>: ‘print’ <print_end> ‘;’
<print_end>: <string> | <expression> | <string> ‘,’ <print_end> | <expression> ‘,’ <print_end>
<scan>: ‘scan’ <identifier> ‘;’
<for>: ‘for’ <identifier> ‘=’ <expression> ‘to’ <expression>
<if>: ‘if’ <bool_expression>
<else>:  | ‘else’ ‘{’ <statement> ‘}’
<statement>:  | <print> <statement> | <scan> <statement> | <assign> <statement> | <for> ‘{’ <statement> ‘}’ | <if> ‘{’ <statement> ‘}’ <else>
<program>: <statement>